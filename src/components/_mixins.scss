// media rules

@mixin breakpoint($breakpoint) {
  @if $breakpoint == mobile {
    @media screen and(max-width: 375px) { @content ;}
  }
  @else if $breakpoint == tablet {
    @media screen and(max-width: 765px) { @content ;}
  }
}

// flex grid

$numberColumns: 12;
$gap: 20px;

$size-xl: 1220px;
$size-lg: 1000px;
$size-md: 768px;
$size-sm: 576px;

@mixin media-interval($min, $max) {
  @if($max == 0) {
    $max: 9999px;
  }

  @media (min-width: ($min + 1px)) and (max-width: $max) {
    @content ;
  } 
}

@mixin create-grid($type) {
  @for $i from 1 to $numberColumns {
    .col-#{$type}-#{$i} {
      width: (100% / $numberColumns) * $i;
    }
    .skip-#{$type}-#{$i} {
      margin-right: (100% / $numberColumns) * $i;
    }
    .add-#{$type}-#{$i} {
      margin-left: (100% / $numberColumns) * $i;
    }    
  }
}

@include media-interval($size-xl, 0) {
  @include create-grid(xl);
}
@include media-interval($size-lg, $size-xl) {
  @include create-grid(lg);
}
@include media-interval($size-md, $size-lg) {
  @include create-grid(md);
}
@include media-interval($size-sm, $size-md) {
  @include create-grid(sm);
}
@include media-interval(0, $size-sm) {
  @include create-grid(xs);
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 (-$gap / 2);
  padding-right: $gap / 2;
  padding-left: $gap / 2;
}

.col {
  flex: 1 1 0;
}

li[class*="col"] {
  padding-top: $gap;
  padding-right: $gap / 2;
  padding-left: $gap / 2;
  border: 1px solid black;
}